### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。

### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。

### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。


### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。

### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。

### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。


### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。

### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。

### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。


### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。

### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。

### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。


### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。

### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。

### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。


### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。

### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。

### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。


### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。

### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。

### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。


### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。

### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。

### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。


### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。

### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。

### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。


### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。

### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。

### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。


### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。

### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。

### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。


### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。

### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。

### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。


### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。

### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。

### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。


### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。

### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。

### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。


### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。

### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。

### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。


### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。

### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。

### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。


### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。

### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。

### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。


### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。

### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。

### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。


### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。

### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。

### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。


### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。

### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。

### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。


### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。

### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。

### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。


### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。

### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。

### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。


### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。

### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。

### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。


### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。

### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。

### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。


### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。

### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。

### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。


### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。

### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。

### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。


### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。

### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。

### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。


### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。

### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。

### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。


### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。

### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。

### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。


### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。

### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。

### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。


### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。

### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。

### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。


### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。

### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。

### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。


### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。

### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。

### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。


### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。

### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。

### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。


### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。

### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。

### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。


### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。

### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。

### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。


### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。

### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。

### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。


### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。

### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。

### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。


### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。

### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。

### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。


### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。

### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。

### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。


### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。

### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。

### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。


### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。

### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。

### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。


### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。

### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。

### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。


### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。

### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。

### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。


### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。

### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。

### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。


### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。

### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。

### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。


### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。

### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。

### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。


### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。

### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。

### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。


### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。

### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。

### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。


### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。

### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。

### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。


### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。

### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。

### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。


### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。

### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。

### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。


### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。

### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。

### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。


### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。

### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。

### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。


### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。

### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。

### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。


### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。

### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。

### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。


### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。

### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。

### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。


### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。

### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。

### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。


### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。

### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。

### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。


### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。

### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。

### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。


### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。

### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。

### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。


### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。

### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。

### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。


### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。

### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。

### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。


### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。

### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。

### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。


### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。

### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。

### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。


### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。

### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。

### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。


### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。

### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。

### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。


### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。

### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。

### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。


### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。

### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。

### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。


### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。

### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。

### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。


### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。

### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。

### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。


### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。

### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。

### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。


### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。

### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。

### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。


### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。

### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。

### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。


### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。

### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。

### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。


### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。

### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。

### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。


### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。

### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。

### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。


### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。

### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。

### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。


### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。

### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。

### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。


### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。

### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。

### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。


### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。

### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。

### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。


### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。

### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。

### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。


### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。

### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。

### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。


### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。

### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。

### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。


### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。

### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。

### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。


### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。

### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。

### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。


### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。

### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。

### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。


### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。

### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。

### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。


### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。

### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。

### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。


### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。

### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。

### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。


### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。

### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。

### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。


### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。

### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。

### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。


### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。

### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。

### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。


### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。

### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。

### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。


### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。

### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。

### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。


### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。

### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。

### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。


### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。

### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。

### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。


### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。

### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。

### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。


### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。

### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。

### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。


### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。

### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。

### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。


### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。

### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。

### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。


### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。

### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。

### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。


### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。

### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。

### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。


### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。

### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。

### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。


### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。

### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。

### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。


### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。

### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。

### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。


### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。

### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。

### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。


### 2.1 JavaScript 基础

JavaScript 基础非常重要，相比于大同小异的框架面试题，JavaScript 可以问很多东西，而且细问起来也有很多有意思东西，如果时间充足可以系统地过一遍。（现实往往是没时间...）

- 执行上下文/作用域链/闭包
- this/call/apply/bind
- 原型/继承
- Promise
- 深浅拷贝
- 事件机制/Event Loop
- 函数式编程
- service worker/web worker
- 常用方法
- ...

### 2.2 CSS 基础

- position
- 行内元素/块状元素
- flex
- 1px
- 重绘回流
- Sass/Less
- 居中/常见布局
- 层叠上下文
- ...

### 2.3 框架

这一块主要是关注 Vue 和 React 的共性和特性，侧重 Vue（我工作中是主 Vue），过程中看了一些源码，加深理解。

- MVVM
- 生命周期
- 数据绑定
- 状态管理
- 组件通信
- computed/watch 原理
- Virtual DOM
- diff
- React Hook
- React Hoc/Vue mixin
- Vue 和 React 有什么不同
- ...

### 2.4 工程化

对于写业务的同学来说，之前可能没有大规模接触过工程化的东西，不过这并不影响我们可以自己去学习和了解。

- webpack
- babel
- 模板引擎
- 前端发布
- weex
- ...

### 2.6 性能优化

性能优化是必备技能，必须了解。

- 打包优化
- 网络优化
- 代码优化
- ...

### 2.7 TypeScript

TypeScript 不敢写自己深入，只是了解，所以只是复习了一些基础的知识点和比较简单的问题，比如：JavaScript 和 TypeScript 有什么区别，在进行项目选型时，什么因素会让你选择 TypeScript 等。

### 2.8 网络/浏览器

对于前端开发来说，网络和浏览器也属于必须了解的知识点。

- HTTP
- DNS
- TCP
- HTTPS
- CDN
- ...

经典问题，从输入 URL 到页面展示，发生了什么。这个问题我觉得还是很考验广度和深度的，可以好好思考一下，每个人可能回答的结果都会是不一样的。

### 2.9 计算机基础

- 设计模式
- 数据结构
- 基础算法
- 安全
- ...

### 2.10 Node

Node 我的了解并不太多，所以没有特意去准备。

### 2.11 项目/业务

简历上写的项目，仔细认真的过一遍。还有就是关于业务的一些深层次的东西，得好好思考一下。

### 2.12 其它

一些开放性问题还是需要好好思考一下，顺便也准备一下 HR 面可能会问到的一些问题。


作者：axuebin
链接：https://juejin.im/post/5e5522b36fb9a07ce152c51c
来源：掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。



前端高级 工程师]需求分析、 功能设计与实现:包括前端UI,业务逻辑和后端服务;

HTML、H5、CSS3、 JS、Bootstrap 等Web前端开发技术;动手编写W3C标准;兼容多种浏览器前端页面代码工作原理;

精通前端开发框架: (Vue、 Reac、Bootstrap等) MVVM框架并且要掌握里面实现原理。

Dom、XML、 JSON、 Ajax等相关技术，面向对象思想;

API、SOA、 Restfu1或大型网站开发经验;

SVN/Git代码管理_工具。